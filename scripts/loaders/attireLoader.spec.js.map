{"version":3,"sources":["scripts/loaders/attireLoader.spec.js"],"names":["describe","loader","beforeEach","AttireLoader","it","context","boards","attire","aJSON","getProjectName","expect","getFile","toEqual","content","name","callback","sinon","spy","addOrSetAttire","example","rules","_readText","stub","callsArgWith","JSON","stringify","read","called","toBeTruthy","calledWith","toBeFalsy"],"mappings":";;AAAAA,SAAS,cAAT,EAAyB,YAAW;;AAElC,MAAIC,MAAJ;;AAEAC,aAAW,YAAW;AACpBD,aAAS,IAAIE,YAAJ,EAAT;AACD,GAFD;;AAIAC,KAAG,gCAAH,EAAqC,YAAW;AAC9C,QAAIC,UAAU;AACZC,cAAQ;AACNC,gBAAQ,EAAEC,OAAO,SAAT;AADF,OADI;AAIZC,sBAAgB,0BAAW;AAAE,eAAO,QAAP;AAAiB;AAJlC,KAAd;;AAOAC,WAAOT,OAAOU,OAAP,CAAeN,OAAf,CAAP,EAAgCO,OAAhC,CAAwC;AACtCC,eAAS,qBAD6B;AAEtCC,YAAM;AAFgC,KAAxC;AAID,GAZD;;AAcAV,KAAG,8EAAH,EAAmF,YAAW;AAC5F,QAAIW,WAAWC,MAAMC,GAAN,EAAf;AACA,QAAIC,iBAAiBF,MAAMC,GAAN,EAArB;;AAEA,QAAIZ,UAAU;AACZC,cAAQ;AACNY,wBAAgBA;AADV;AADI,KAAd;;AAMA,QAAIC,UAAU;AACZL,YAAM,SADM;AAEZM,aAAO;AAFK,KAAd;AAIAnB,WAAOoB,SAAP,GAAmBL,MAAMM,IAAN,GAAaC,YAAb,CAA0B,CAA1B,EAA6BC,KAAKC,SAAL,CAAeN,OAAf,CAA7B,EAAsD,WAAtD,CAAnB;AACAlB,WAAOyB,IAAP,CAAYrB,OAAZ,EAAqB,IAArB,EAA2BU,QAA3B;;AAEAL,WAAOK,SAASY,MAAhB,EAAwBC,UAAxB;AACAlB,WAAOQ,eAAeW,UAAf,CAA0BV,OAA1B,CAAP,EAA2CS,UAA3C;AACD,GAnBD;;AAqBAxB,KAAG,4CAAH,EAAiD,YAAW;AAC1D,QAAIc,iBAAiBF,MAAMC,GAAN,EAArB;;AAEA,QAAIZ,UAAU;AACZC,cAAQ;AACNY,wBAAgBA;AADV;AADI,KAAd;;AAMA,QAAIC,UAAU,uBAAd;AACAlB,WAAOoB,SAAP,GAAmBL,MAAMM,IAAN,GAAaC,YAAb,CAA0B,CAA1B,EAA6BJ,OAA7B,EAAsC,WAAtC,CAAnB;AACAlB,WAAOyB,IAAP,CAAYrB,OAAZ,EAAqB,IAArB,EAA2B,YAAW,CAAE,CAAxC;;AAEAK,WAAOQ,eAAeS,MAAtB,EAA8BG,SAA9B;AACD,GAdD;AAgBD,CA3DD","file":"attireLoader.spec.js","sourcesContent":["describe('AttireLoader', function() {\n\n  var loader;\n\n  beforeEach(function() {\n    loader = new AttireLoader();\n  })\n\n  it(\"can retrieve the file to store\", function() {\n    var context = {\n      boards: {\n        attire: { aJSON: \"example\" }\n      },\n      getProjectName: function() { return \"sarasa\" }\n    };\n\n    expect(loader.getFile(context)).toEqual({\n      content: '{\"aJSON\":\"example\"}',\n      name: \"sarasa.attire.json\"\n    });\n  });\n\n  it(\"sets the attire if the json is coherent and calls the callback after reading\", function() {\n    var callback = sinon.spy();\n    var addOrSetAttire = sinon.spy();\n\n    var context = {\n      boards: {\n        addOrSetAttire: addOrSetAttire\n      }\n    };\n\n    var example = {\n      name: \"Example\",\n      rules: []\n    };\n    loader._readText = sinon.stub().callsArgWith(1, JSON.stringify(example), \"AFileName\");\n    loader.read(context, null, callback);\n\n    expect(callback.called).toBeTruthy();\n    expect(addOrSetAttire.calledWith(example)).toBeTruthy();\n  });\n\n  it(\"doesn't do anything if the json is invalid\", function() {\n    var addOrSetAttire = sinon.spy();\n\n    var context = {\n      boards: {\n        addOrSetAttire: addOrSetAttire\n      }\n    };\n\n    var example = '{ \"invalid\": \"data\" }'\n    loader._readText = sinon.stub().callsArgWith(1, example, \"AFileName\");\n    loader.read(context, null, function() {});\n\n    expect(addOrSetAttire.called).toBeFalsy();\n  });\n\n});\n"]}